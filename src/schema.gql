# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: ID!
  fullName: String!
  email: String!
  roles: [String!]!
  isactive: Boolean!
  lastUpdateBy: User
  itemCount: Int!
  listCount: Int!
  items(offset: Int = 0, limit: Int = 5, search: String): [Item!]!
  lists(offset: Int = 0, limit: Int = 5, search: String): [Item!]!
}

type List {
  """ID of the list"""
  id: ID!

  """Name of the list"""
  name: String!

  """User who created the list"""
  user: User!
  items(offset: Int = 0, limit: Int = 5, search: String): [ListItem!]!
  totalItems: Float!
}

type ListItem {
  """ID of the list"""
  id: ID!

  """Quantity of the item"""
  quantity: Float!

  """If the item is completed"""
  completed: Boolean!

  """List associated with the list item"""
  list: List!

  """Item associated with the list item"""
  item: Item!
}

type Item {
  id: ID!
  name: String!
  quantityUnits: String
  user: User
  listItem: [ListItem!]!
}

type AuthResponse {
  token: String!
  user: User!
}

type Query {
  items(offset: Int = 0, limit: Int = 5, search: String): [Item!]!
  item(id: ID!): Item!
  users(roles: [ValidRoles!] = []): [User!]!
  user(id: ID!): User!
  lists(offset: Int = 0, limit: Int = 5, search: String): [List!]!
  list(id: Int!): List!
  listItem(id: String!): ListItem!
  revalite: AuthResponse!
}

"""Valid roles for the user"""
enum ValidRoles {
  admin
  user
  superUser
}

type Mutation {
  createItem(createItemInput: CreateItemInput!): Item!
  updateItem(updateItemInput: UpdateItemInput!): Item!
  removeItem(id: ID!): Item!
  updateUser(updateUserInput: UpdateUserInput!): User!
  blockUser(id: ID!): User!
  createList(createListInput: CreateListInput!): List!
  updateList(updateListInput: UpdateListInput!): List!
  removeList(id: Int!): List!
  createListItem(createListItemInput: CreateListItemInput!): ListItem!
  updateListItem(updateListItemInput: UpdateListItemInput!): ListItem!
  signup(signupInput: SignupInput!): AuthResponse!
  login(loginInput: LoginInput!): AuthResponse!

  """Seed the database with initial data"""
  executeSeed: Boolean!
}

input CreateItemInput {
  name: String!
  quantityUnits: String
}

input UpdateItemInput {
  name: String
  quantityUnits: String
  id: ID!
}

input UpdateUserInput {
  email: String
  fullName: String
  password: String
  id: ID!
  roles: [ValidRoles!]
  isactive: Boolean
}

input CreateListInput {
  """Name of the list"""
  name: String!
}

input UpdateListInput {
  """Name of the list"""
  name: String
  id: ID!
}

input CreateListItemInput {
  """Quantity of the item"""
  quantity: Float = 0

  """If the item is completed"""
  completed: Boolean = false
  listId: ID!

  """ID of the item"""
  itemId: String!
}

input UpdateListItemInput {
  """Quantity of the item"""
  quantity: Float = 0

  """If the item is completed"""
  completed: Boolean = false
  listId: ID

  """ID of the item"""
  itemId: String
  id: ID!
}

input SignupInput {
  email: String!
  fullName: String!
  password: String!
}

input LoginInput {
  email: String!
  password: String!
}